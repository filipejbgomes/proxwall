# interfaces
PUB1=vmbr1
LAN1=vmbr10
LAN2=vmbr20

# rules source file locations
whitelistdynamiccsv=dynamic.csv
whiteliststaticcsv=static.csv
sshrulescsv=ssh.csv
vmrulescsv=vm.csv

#rulesbasepath (folder must be under main script dir)
rulespath=rules

#compute network interface info (dynamically obtained, you can override any values below)
PUB1_ADDR=$(hostname --ip-address)
LAN1_ADDR=$(ip addr show ${LAN1} | grep -o 'inet [0-9]\+\.[0-9]\+\.[0-9]\+\.[0-9]\+' | grep -o [0-9].*)
LAN1_SUB=$(ip addr show ${LAN1} | grep -o 'inet [0-9]\+\.[0-9]\+\.[0-9]\+\.[0-9]\+/[0-9][0-9]' | grep -o [0-9].*)
LAN2_ADDR=$(ip addr show ${LAN2} | grep -o 'inet [0-9]\+\.[0-9]\+\.[0-9]\+\.[0-9]\+' | grep -o [0-9].*)
LAN2_SUB=$(ip addr show ${LAN2} | grep -o 'inet [0-9]\+\.[0-9]\+\.[0-9]\+\.[0-9]\+/[0-9][0-9]' | grep -o [0-9].*)

#initialize common vars
iptables=/sbin/iptables

#get uptime to call external script only after init (at interface UP time)
upSeconds="$(cat /proc/uptime | grep -o '^[0-9]\+')"
upMins=$((${upSeconds} / 60))

# Logging and error handling function declaration
LogMsg() {
   DateTime=`date '+%Y/%m/%d %H:%M:%S'`    # Date in format yyyymmdd hhmmss
   LocalHost=`hostname -f`                # localhost name
   LogMsgHeader=`printf "%s %s %s[%d]" "$DateTime" "$LocalHost" "$0" "$$"`
   printf "%s: S=%s %s\n" "$LogMsgHeader" "$1" "$2"
   return
}
